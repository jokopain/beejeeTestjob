{"version":3,"sources":["api/api.js","redux/tasks-reducer.js","redux/admins-reducer.js","redux/forms-reducer.js","redux/store.js","util/validators.js","components/common/FieldInput.jsx","components/common/AdminLogin.jsx","redux/selectors.js","components/Tasks/TasksEditMode.jsx","components/Tasks/TaskItem.jsx","components/Tasks/TasksSortMenu.jsx","components/Tasks/TaskSendForm.jsx","components/Sidebar/Sidebar.jsx","components/Tasks/Tasks.jsx","components/Tasks/TaskContainer.jsx","util/customHooks.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","baseURL","window","location","origin","headers","tasksAPI","page","order","orderBy","post","response","data","username","text","eMail","status","id","isModered","adminAPI","login","SET_TASKS","SET_ORDER","SET_ORDER_BY","SET_PAGE","TOGGEL_ON_WAY","TOGGEL_INITED","intialState","items","nowPage","total","isInited","onWay","setTasksAC","tasks","type","payload","setOrderAC","setOrderByAC","setPageAC","tasksOnWayAC","toggelInited","tasksReducer","state","action","SET_ADMIN","userdata","setAdminAC","dataOnWayAC","LOAD","CLEAR","formsReducer","reducers","combineReducers","admin","adminsReducer","forms","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","required","value","undefined","isEmail","test","FieldInput","input","meta","placeholder","style","as","hasError","error","touched","err","JSON","parse","target","useRef","Overlay","current","show","placement","props","Tooltip","msg","Form","Control","ref","defaultValue","onChange","reduxForm","className","onSubmit","handleSubmit","Row","Col","Field","validate","name","component","marginTop","display","Button","variant","width","tasksData","adminData","TasksEditMode","load","pristine","reset","submitting","useEffect","marginLeft","connect","initialValues","enableReinitialize","React","memo","isEdited","setNowEdit","nowEdit","saveTask","isLoggined","Card","bg","Header","onClick","Body","Text","changeOrder","Nav","activeKey","onSelect","Item","Link","eventKey","href","addStatus","Alert","Sidebar","isLoggened","logOut","sm","to","Task","editedStatus","addTask","cngPage","active","parseInt","pages","pagesCount","Math","ceil","number","push","Pagination","key","length","map","item","i","Prev","Next","compose","withRouter","getTasks","dispatch","a","setOrder","task","saveEditedTask","clear","logIn","history","useHistory","match","useRouteMatch","query","qu","URLSearchParams","useLocation","search","get","useQuery","useState","setAddStatus","setEditedStatus","useCookies","cookies","isExact","setNowEditWithClear","Tasks","localStorage","getItem","setTimeout","newOrder","newOrderBy","e","preventDefault","currentTarget","getAttribute","getAdmin","hashPass","sha256","password","passHash","toggleAuth","setCookie","removeCookie","setStatus","resp","path","sameSite","setItem","Container","exact","Boolean","hostname","ReactDOM","render","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d720b0e1.chunk.js","sourcesContent":["import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: `${window.location.origin}/api/`,\r\n    // baseURL: `http://beejee.loc/api/`,\r\n    headers: { \r\n    'Content-Type': 'application/json',\r\n    'Authorization': '080042cad6356ad5dc0a720c18b53b8e53d4c274'\r\n},\r\n});\r\n\r\nexport const tasksAPI = {\r\n    async getTasks(page = 1, order = \"desc\", orderBy = \"isModered\") {\r\n        let response = await instance.post(`task/get/${page}/${order}/${orderBy}`)\r\n        return response.data;\r\n    },\r\n    async addTask(data) {\r\n        let response = await instance.post(`task/add/?username=${data.username}&text=${data.text}&email=${data.eMail}`)\r\n        return response.data.status === \"1\" ? true : false;\r\n    },\r\n    async saveTask(data) {\r\n        let response = await instance.post(`task/edit/?username=${data.username}&text=${data.text}&email=${data.eMail}&id=${data.id}&isModered=${data.isModered}`)\r\n        return response.data.status === \"1\" ? true : false;\r\n    }\r\n}\r\n\r\nexport const adminAPI = {\r\n    async getAdmin(login) {\r\n        let response = await instance.post(`user/get/${login}`)\r\n        return response.data;\r\n    }\r\n}","import {tasksAPI} from '../api/api'\r\nimport {reset} from 'redux-form';\r\n\r\nconst SET_TASKS = \"/beejee/tasks/SET_TASKS\";\r\nconst SET_ORDER = \"/beejee/tasks/SET_ORDER\";\r\nconst SET_ORDER_BY = \"/beejee/tasks/SET_ORDER_BY\";\r\nconst SET_PAGE = \"/beejee/tasks/SET_PAGE\";\r\nconst TOGGEL_ON_WAY = \"/beejee/tasks/TOGGEL_ON_WAY\";\r\nconst TOGGEL_INITED = \"/beejee/tasks/TOGGEL_INITED\";\r\n\r\n\r\nlet intialState = {\r\n    items: [],\r\n    order: \"desc\",\r\n    orderBy: \"username\",\r\n    nowPage: 1,\r\n    total: 0,\r\n    isInited: false,\r\n    onWay: true\r\n}\r\n\r\nconst tasksReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TASKS:\r\n            return {\r\n                ...state,\r\n                items: [...action.payload.items],\r\n                total: action.payload.total\r\n            }\r\n        case SET_ORDER:\r\n            return {\r\n                ...state,\r\n                order: action.payload\r\n            }\r\n        case SET_ORDER_BY:\r\n            return {\r\n                ...state,\r\n                orderBy: action.payload\r\n            }\r\n        case SET_PAGE:\r\n            return {\r\n                ...state,\r\n                nowPage: action.payload\r\n            }\r\n        case TOGGEL_INITED: \r\n            return {\r\n                ...state,\r\n                isInited: action.payload\r\n            }\r\n        case TOGGEL_ON_WAY:\r\n            return {\r\n                ...state,\r\n                onWay: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n/* Action creators */\r\nconst setTasksAC = (tasks) => ({type: SET_TASKS, payload: tasks})\r\nconst setOrderAC = (order) => ({type: SET_ORDER, payload: order})\r\nconst setOrderByAC = (orderBy) => ({type: SET_ORDER_BY, payload: orderBy})\r\nconst setPageAC = (page) => ({type: SET_PAGE, payload: page})\r\nconst tasksOnWayAC = (onWay) => ({type: TOGGEL_ON_WAY, payload: onWay})\r\nconst toggelInited = (status) => ({type: TOGGEL_INITED, payload: status})\r\n\r\n/* Thunk creators */\r\nexport const getTasks = (page = 1, order = \"desc\", orderBy = \"username\") => async (dispatch) => {\r\n        dispatch(tasksOnWayAC(true))\r\n    let data = await tasksAPI.getTasks(page, order, orderBy);\r\n        dispatch(setTasksAC(data))\r\n        dispatch(setOrderAC(order))\r\n        dispatch(setOrderByAC(orderBy))\r\n        dispatch(setPageAC(page))\r\n        dispatch(toggelInited(true)) \r\n        dispatch(tasksOnWayAC(false))  \r\n}\r\n\r\nexport const addTask = (data) => async (dispatch) => {\r\n        dispatch(toggelInited(false))\r\n    let task = await tasksAPI.addTask(data);\r\n    if (task){\r\n        dispatch(reset('addtask'));\r\n        dispatch(toggelInited(true));\r\n        return task;\r\n    }\r\n}\r\n\r\nexport const setOrder = (order) => (dispatch) => {\r\n    dispatch(setOrderAC(order))\r\n}\r\n\r\n\r\nexport const saveEditedTask = (data) => async (dispatch) => {\r\n        dispatch(toggelInited(false))\r\n    let task = await tasksAPI.saveTask(data);\r\n        dispatch(toggelInited(true))\r\n        return task;\r\n    \r\n}\r\n\r\n\r\n\r\nexport default tasksReducer;","import {adminAPI} from '../api/api';\r\nimport {reset} from 'redux-form';\r\nimport { sha256 } from 'js-sha256';\r\nconst SET_ADMIN = \"/beejee/admins/SET_ADMIN\";\r\nconst TOGGEL_ON_WAY = \"/beejee/admins/TOGGEL_ON_WAY\";\r\nconst TOGGEL_INITED = \"/beejee/admins/TOGGEL_INITED\";\r\n\r\n\r\nlet intialState = {\r\n    userdata: {},\r\n    isInited: false,\r\n    onWay: true\r\n}\r\n\r\nconst tasksReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ADMIN:\r\n            return {\r\n                ...state,\r\n                userdata: {...action.payload}\r\n            }\r\n        case TOGGEL_INITED: \r\n            return {\r\n                ...state,\r\n                isInited: action.payload\r\n            }\r\n        case TOGGEL_ON_WAY:\r\n            return {\r\n                ...state,\r\n                onWay: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n/* Action creators */\r\nconst setAdminAC = (userdata) => ({type: SET_ADMIN, payload: userdata})\r\nconst dataOnWayAC = (onWay) => ({type: TOGGEL_ON_WAY, payload: onWay})\r\nconst toggelInited = (status) => ({type: TOGGEL_INITED, payload: status})\r\n\r\n/* Thunk creators */\r\nexport const getAdmin = (userdata) => async (dispatch) => {\r\n        dispatch(dataOnWayAC(true))\r\n    let data = await adminAPI.getAdmin(userdata.login);\r\n    if (data === null) {\r\n        return false\r\n    }\r\n    dispatch(reset(\"login\")) \r\n        dispatch(setAdminAC(data))\r\n        let hashPass = sha256(userdata.password);\r\n        if (userdata.login === data.username && hashPass === data.passHash){\r\n        dispatch(toggelInited(true)) \r\n        dispatch(dataOnWayAC(false)) \r\n        return true;\r\n    }\r\n        \r\n}\r\n\r\nexport const toggleAuth = (status) => (dispatch) => {\r\n    dispatch(toggelInited(status))\r\n}\r\n\r\n\r\nexport default tasksReducer;","import {reset} from 'redux-form';\r\nconst LOAD = 'forms/editTask/LOAD'\r\nconst CLEAR = 'forms/editTask/CLEAR'\r\n\r\nconst formsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case LOAD:\r\n      return {\r\n        data: action.data\r\n      }\r\n    case CLEAR:\r\n        return {\r\n            data: {}\r\n        }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const load = data => ({ type: LOAD, data })\r\n\r\nexport const clearAC = () => ({ type: CLEAR })\r\n\r\nexport const clear = () => async (dispatch) => {\r\n        dispatch(clearAC());\r\n        dispatch(reset('editTask'));\r\n}\r\n\r\nexport default formsReducer","import {combineReducers, createStore, applyMiddleware } from \"redux\"\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\n/* Reducers import */\r\nimport tasksReducer from './tasks-reducer.js'\r\nimport adminsReducer from './admins-reducer.js'\r\nimport formsReducer from './forms-reducer.js'\r\n\r\nlet reducers = combineReducers({\r\n    admin: adminsReducer,\r\n    tasks: tasksReducer,\r\n    forms: formsReducer,\r\n    form: formReducer \r\n});\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n/* For debug */\r\n// window.store = store;\r\n\r\nexport default store; ","let reg = '{\"type\" : \"req\", \"msg\" : \"Required\"}'\r\n\r\n\r\nexport const required = value => value ? undefined : reg\r\n\r\n\r\nexport const isEmail = value => \r\n        value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? '{\"type\" : \"isEmail\", \"msg\" : \"Invalid email address\"}' : undefined","import React,{useRef} from 'react';\r\nimport { Form, Overlay, Tooltip } from 'react-bootstrap';\r\n\r\nconst FieldInput = ({ input, meta, type, placeholder, style={}, as=\"input\", ...props}) => {\r\n    let hasError = meta.error && meta.touched,\r\n        err = (meta.error) ? JSON.parse(meta.error) : \"\";\r\n    const target = useRef(null);\r\n    // console.log(props);\r\n    return (\r\n        <>\r\n       <Overlay target={target.current} show={hasError} placement=\"right\">\r\n        {(props) => (\r\n          <Tooltip {...props}>\r\n            {err.msg}\r\n          </Tooltip>\r\n        )}\r\n      </Overlay>\r\n        <Form.Control\r\n            ref={target}\r\n            required\r\n            style={{...style}}\r\n            as={as}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            defaultValue={input.value}\r\n            onChange={input.onChange} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FieldInput;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required} from '../../util/validators';\r\n\r\n/* Bootstrap */\r\nimport { Form, Row, Col, Button} from 'react-bootstrap';\r\n\r\n\r\nimport FieldInput from './FieldInput';\r\n\r\nconst AdminLogin = (props) => {\r\n    return(\r\n        <Form className=\"login-form\" onSubmit={props.handleSubmit}>\r\n            <Row>\r\n                <Col>\r\n                <Field\r\n                    validate={[required]} \r\n                    name=\"login\"\r\n                    type='text' \r\n                    component={FieldInput} \r\n                    placeholder=\"Ваше имя\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                <Field\r\n                    style={{marginTop: \"10px\"}}\r\n                    validate={[required]} \r\n                    name=\"password\"\r\n                    type='password' \r\n                    component={FieldInput} \r\n                    placeholder=\"Ваш e-Mail\"/>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col style={{display: \"flex\"}}>\r\n                    <Button variant=\"primary\" style={{marginTop: \"10px\", width: \"100%\"}} type=\"submit\">Войти</Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default reduxForm({form: 'login'})(AdminLogin);;","export const tasksData = {\r\n    getTasks(state) {return state.tasks.items},\r\n    getTotal(state) {return state.tasks.total},\r\n    getOrder(state) {return state.tasks.order},\r\n    getOrderBy(state) {return state.tasks.orderBy},\r\n    getPage(state) {return state.tasks.nowPage},\r\n    isInited(state) {return state.tasks.isInited}\r\n}\r\n\r\nexport const adminData = {\r\n    getAdmin(state) {return state.admin.userdata},\r\n    isInited(state) {return state.admin.isInited}\r\n}","import React, { useEffect } from 'react';\r\n\r\nimport {Field, reduxForm } from \"redux-form\";\r\nimport {isEmail, required} from '../../util/validators';\r\nimport { connect } from 'react-redux';\r\nimport { load as loadAccount } from '../../redux/forms-reducer'\r\n/* Bootstrap */\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\n\r\n\r\nimport FieldInput from '../common/FieldInput';\r\n\r\n\r\nlet data = {};\r\nlet TasksEditMode = ({username, isModered, eMail, text, id, handleSubmit, load, pristine, reset, submitting, ...props}) => {\r\n    data = {\r\n        // used to populate \"account\" reducer when \"Load\" is clicked\r\n        id: id,\r\n        username: username,\r\n        eMail: eMail,\r\n        text: text,\r\n        isModered: isModered\r\n      }\r\n      \r\n      useEffect(()=>{\r\n        load(data)\r\n      })\r\n    return(\r\n        <Form onSubmit={handleSubmit}>\r\n        <Row>\r\n            <Col>\r\n            <Field \r\n                name=\"id\"\r\n                type='hidden' \r\n                component={FieldInput} />\r\n            <Field \r\n                name=\"isModered\"\r\n                type='hidden' \r\n                component={FieldInput} />\r\n            <Field\r\n                validate={[required]} \r\n                value={username}\r\n                name=\"username\"\r\n                type='text' \r\n                component={FieldInput} />\r\n            </Col>\r\n            <Col>\r\n            <Field\r\n                validate={[required, isEmail]} \r\n                value={eMail}\r\n                name=\"eMail\"\r\n                type='text' \r\n                component={FieldInput} />\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n            <Field\r\n                validate={[required]}\r\n                value={text}\r\n                name=\"text\"\r\n                as='textarea' \r\n                style={{marginTop: \"10px\"}}\r\n                component={FieldInput} />\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col style={{display: \"flex\"}}>\r\n                <Button variant=\"primary\" style={{marginTop: \"10px\", marginLeft: \"auto\"}} type=\"submit\">Сохранить</Button>\r\n            </Col>\r\n        </Row>\r\n    </Form>\r\n    );\r\n}\r\n\r\n// Decorate with reduxForm(). It will read the initialValues prop provided by connect()\r\nTasksEditMode = reduxForm({\r\n  form: `editTask` // a unique identifier for this form\r\n})(TasksEditMode)\r\n\r\n// You have to connect() to any reducers that you wish to connect to yourself\r\nTasksEditMode = connect(\r\n  state => ({\r\n    initialValues: state.forms.data, // pull initial values from account reducer\r\n    enableReinitialize : true\r\n  }),\r\n  \r\n  { load: loadAccount } // bind account loading action creator\r\n)(TasksEditMode)\r\n\r\nexport default TasksEditMode\r\n\r\n// export default reduxForm({form: 'editTask'})(TasksEditMode);\r\n","import React from 'react';\r\nimport {Card, Button } from 'react-bootstrap';\r\nimport TasksEditMode from './TasksEditMode';\r\n\r\n\r\nconst TaskItem = ({isModered, isEdited, setNowEdit, nowEdit, id, saveTask, username, eMail, text, isLoggined, ...props}) => {\r\n    let data = {\r\n        username, eMail, text, id,\r\n        isModered: isModered === \"0\" ? \"1\" : \"0\"\r\n    }\r\n    return(\r\n        <Card className=\"task\" bg={isModered === \"0\" ? \"danger\" : \"success\" } text=\"white\">\r\n            <Card.Header className=\"task-header\"><div>Задача от {username} | {eMail}</div> {isEdited !== \"0\" ? <span>отредактировано администратором</span> : \"\"}\r\n                {isLoggined && <Button onClick={()=>{ setNowEdit(nowEdit === id ? false : id)}} variant=\"primary\"> <i className=\"far fa-edit\"></i> </Button>}\r\n                {isLoggined && <Button onClick={()=>{saveTask(data)}} variant={isModered === \"1\" ? \"danger\" : \"success\"}> {isModered === \"1\" ? <i className=\"fas fa-times\"></i> : <i className=\"fas fa-check\"></i>} </Button>}\r\n            </Card.Header>\r\n            <Card.Body>\r\n                {nowEdit === id ? <TasksEditMode onSubmit={saveTask} id={id} isModered={isModered} username={username} eMail={eMail} text={text}/> : <Card.Text>{text}</Card.Text>}\r\n                \r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default React.memo(TaskItem);","import React from 'react';\r\n\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nconst TasksSortMenu = ({changeOrder, orderBy, order, nowPage, ...props}) => {\r\n    return(\r\n        <Nav className=\"sort-menu\" variant=\"pills\" activeKey={orderBy} onSelect={()=>{}}>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"username\" href={`/tasks?page=${nowPage}&order=${order === \"asc\" ? \"desc\" : \"asc\"}&orderBy=username`} onClick={changeOrder(order === \"asc\" ? \"desc\" : \"asc\", \"username\")}>\r\n            Имя {order === \"desc\" ? <i className=\"fas fa-sort-amount-down\"></i> : <i className=\"fas fa-sort-amount-down-alt\"></i> }\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"eMail\" href={`/tasks?page=${nowPage}&order=${order === \"asc\" ? \"desc\" : \"asc\"}&orderBy=eMail`} onClick={changeOrder(order === \"asc\" ? \"desc\" : \"asc\", \"eMail\")}>\r\n            Email {order === \"desc\" ? <i className=\"fas fa-sort-amount-down\"></i> : <i className=\"fas fa-sort-amount-down-alt\"></i> }\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"isModered\" href={`/tasks?page=${nowPage}&order=${order === \"asc\" ? \"desc\" : \"asc\"}&orderBy=isModered`} onClick={changeOrder(order === \"asc\" ? \"desc\" : \"asc\", \"isModered\")}>\r\n            Статус {order === \"desc\" ? <i className=\"fas fa-sort-amount-down\"></i> : <i className=\"fas fa-sort-amount-down-alt\"></i> }\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    );\r\n}\r\n\r\nexport default React.memo(TasksSortMenu);","import React from 'react';\r\n\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {isEmail, required} from '../../util/validators';\r\n\r\n/* Bootstrap */\r\nimport { Form, Row, Col, Button, Alert} from 'react-bootstrap';\r\n\r\n\r\nimport FieldInput from '../common/FieldInput';\r\n\r\n\r\n\r\nconst TaskSendForm = ({addStatus, ...props}) => {\r\n\r\n\r\n    return(\r\n        <>\r\n        {addStatus ? <Alert variant=\"success\"> Задача успешно добавлена. </Alert> :\r\n        <Form onSubmit={props.handleSubmit}>\r\n            <Row>\r\n                <Col>\r\n                <Field\r\n                    validate={[required]} \r\n                    name=\"username\"\r\n                    type='text' \r\n                    component={FieldInput}\r\n                    value={\"\"} \r\n                    placeholder=\"Ваше имя\"/>\r\n                </Col>\r\n                <Col>\r\n                <Field\r\n                    validate={[required, isEmail]} \r\n                    name=\"eMail\"\r\n                    type='text' \r\n                    component={FieldInput} \r\n                    value={\"\"} \r\n                    placeholder=\"Ваш e-Mail\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                <Field\r\n                    validate={[required]}\r\n                    name=\"text\"\r\n                    as='textarea' \r\n                    style={{marginTop: \"10px\"}}\r\n                    component={FieldInput} \r\n                    value={\"\"} \r\n                    placeholder=\"Текст задачи\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col style={{display: \"flex\"}}>\r\n                    <Button variant=\"primary\" style={{marginTop: \"10px\", marginLeft: \"auto\"}} type=\"submit\">Отправить</Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </Form>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'addtask'})(TaskSendForm);","import React from 'react';\r\nimport { Col, Button } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Sidebar = ({isLoggened = false, logOut}) => {\r\n    return (\r\n        <Col className=\"sidebar\" sm={3}>\r\n            {isLoggened ? <Button onClick={logOut} variant=\"danger\">Выход</Button> : <NavLink to=\"/admin\"><Button variant=\"primary\">Войти в админ панель</Button></NavLink>}\r\n        </Col> \r\n    )}\r\n\r\nexport default Sidebar;","import React from 'react';\r\n\r\n/* Bootstrap */\r\nimport { Col, Pagination, Alert } from 'react-bootstrap';\r\n\r\n/* Components */\r\nimport TaskItem from './TaskItem';\r\nimport TasksSortMenu from './TasksSortMenu';\r\nimport TaskSendForm from './TaskSendForm';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nconst Task = ({tasks, total, setNowEdit, addStatus, editedStatus, nowEdit, changeOrder, saveTask, logOut, isLoggined, orderBy, addTask, nowPage, cngPage, page = 1, order, ...props}) => {\r\n    let active = parseInt(nowPage);\r\n    let pages = [];\r\n    let pagesCount = Math.ceil(total / 3) \r\n    for (let number = 1; number <= pagesCount; number++) {\r\n      pages.push(\r\n        <Pagination.Item key={number} onClick={cngPage} href={`/tasks?page=${number}&order=${order}&orderBy=${orderBy}`} active={number === active}>\r\n          {number}\r\n        </Pagination.Item>,\r\n      );\r\n    }\r\n    \r\n\r\n    let items = tasks.length === 0 ? [] : tasks.map((item, i)=> {\r\n        return (\r\n          <TaskItem key={i} {...item} setNowEdit={setNowEdit} nowEdit={nowEdit} saveTask={saveTask} isLoggined={isLoggined}/>\r\n        )\r\n    }) \r\n\r\n    return(\r\n      <>\r\n        <Col className=\"tasks-wrap\" sm={9}>\r\n            <TasksSortMenu orderBy={orderBy} order={order} nowPage={nowPage} changeOrder={changeOrder} />\r\n            {editedStatus && <Alert variant=\"primary\"> Задача успешно сохранена. </Alert>}\r\n            {items}\r\n            <Pagination className=\"pagination-wrap\">\r\n              <Pagination.Prev onClick={cngPage} href={`/tasks?page=${active !== 1 && active-1 > 0 ? active - 1 : 1 }&order=${order}&orderBy=${orderBy}`}/>\r\n                {pages}\r\n              <Pagination.Next onClick={cngPage} href={`/tasks?page=${active !== pagesCount && active+1 < pagesCount ? active + 1 : pagesCount }&order=${order}&orderBy=${orderBy}`}/>\r\n            </Pagination>\r\n            {!isLoggined && <TaskSendForm addStatus={addStatus} onSubmit={addTask}/>}\r\n            \r\n        </Col>\r\n        <Sidebar logOut={logOut} isLoggened={isLoggined} />\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Task;","import React, {useEffect, useState} from 'react';\r\n\r\n/* Redux */\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport {tasksData} from '../../redux/selectors';\r\nimport {getTasks, setOrder, addTask, saveEditedTask} from '../../redux/tasks-reducer';\r\nimport {clear} from '../../redux/forms-reducer'\r\n\r\n/* Components */\r\nimport Tasks from './Tasks';\r\n\r\n/* Libs */\r\nimport { withRouter } from 'react-router';\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { useCookies } from 'react-cookie';\r\n\r\n/* Custom Hooks */\r\nimport {useQuery} from \"../../util/customHooks\"\r\n\r\nconst TaskContainer = ({getTasks, setOrder, clear, saveEditedTask, isLoggined, logOut, logIn, orderBy, addTask, nowPage, isInited, tasks, total, order, ...props}) => {\r\n    let history = useHistory();\r\n    let match = useRouteMatch(\"/:task\");\r\n    let query = useQuery();\r\n    let [nowEdit, setNowEdit] = useState(false);\r\n    let [addStatus, setAddStatus] = useState(false);\r\n    let [editedStatus, setEditedStatus] = useState(false);\r\n    const [cookies ] = useCookies(['isLoggined']);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(match !== null && match.isExact && query.page !== null){\r\n            if (nowPage !== query.page || order !== query.order || orderBy !== query.orderBy) {\r\n                // console.log(`/tasks?page=${query.page}&order=${query.order}`);\r\n                getTasks(query.page, query.order, query.orderBy)\r\n            }\r\n        }\r\n    }, [query, match, getTasks, nowPage, order, orderBy])\r\n\r\n\r\n    const setNowEditWithClear = (task) => {\r\n        clear()\r\n        setNowEdit(task)\r\n    }\r\n    \r\n\r\n    useEffect(()=>{\r\n        if(!isInited) {\r\n            getTasks(1, \"desc\", \"username\")\r\n        }\r\n    },[isInited, getTasks])\r\n\r\n    const sendTask = (data) => {\r\n       let status = addTask(data);\r\n       setAddStatus(status);\r\n       setTimeout(function() {\r\n        setAddStatus(false); \r\n       }, 1500)\r\n    }\r\n\r\n    const saveTask = (data) => {\r\n        if (isLoggined && cookies.isLoggined && cookies.isLoggined === \"1\" && window.localStorage.getItem(\"loggined\") === \"1\") {\r\n            let status = saveEditedTask(data)\r\n            setEditedStatus(status)\r\n            setTimeout(function() {\r\n                setEditedStatus(false); \r\n               }, 1500)\r\n            setNowEditWithClear(false)\r\n        }\r\n        else {\r\n            setNowEditWithClear(false)\r\n            logOut();\r\n        }\r\n    }\r\n\r\n    const changeOrder = (newOrder, newOrderBy) => (e) => {\r\n        e.preventDefault();\r\n        history.push(`/tasks?page=${nowPage}&order=${newOrder}&orderBy=${newOrderBy}`);\r\n    }\r\n\r\n    const cngPage = (e) => {\r\n        e.preventDefault();\r\n        let to = e.currentTarget.getAttribute(\"href\")\r\n        history.push(to);\r\n    }\r\n\r\n    return <Tasks \r\n                tasks={tasks ? [...tasks] : []} \r\n                addStatus={addStatus} \r\n                editedStatus={editedStatus} \r\n                nowEdit={nowEdit} \r\n                setNowEdit={setNowEditWithClear} \r\n                saveTask={saveTask} \r\n                total={total} \r\n                isLoggined={isLoggined} \r\n                logIn={logIn} \r\n                logOut={logOut} \r\n                orderBy={orderBy} \r\n                nowPage={nowPage} \r\n                addTask={sendTask} \r\n                order={order} \r\n                changeOrder={changeOrder} \r\n                cngPage={cngPage}/>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasks: tasksData.getTasks(state),\r\n        order: tasksData.getOrder(state),\r\n        orderBy: tasksData.getOrderBy(state),\r\n        nowPage: tasksData.getPage(state),\r\n        total: tasksData.getTotal(state),\r\n        isInited: tasksData.isInited(state),\r\n    }\r\n}\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, {getTasks, setOrder, addTask, saveEditedTask, clear})) (TaskContainer);\r\n","import { useLocation } from \"react-router-dom\";\r\nexport const useQuery = () => {\r\n  let qu = new URLSearchParams(useLocation().search);\r\n  let query = {\r\n      page: qu.get(\"page\") && qu.get(\"page\") !== \"\" ? qu.get(\"page\") : null,\r\n      order: qu.get(\"order\") && qu.get(\"order\") !== \"\" ? qu.get(\"order\") : null,\r\n      orderBy: qu.get(\"orderBy\") && qu.get(\"orderBy\") !== \"\" ? qu.get(\"orderBy\") : null,\r\n  }\r\n  return query\r\n}","import React, {useState, useEffect} from 'react';\n\nimport {Route, Switch, useHistory} from 'react-router-dom'\nimport AdminLogin from './components/common/AdminLogin';\nimport { useCookies } from 'react-cookie';\n/* Redux */\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport {adminData} from './redux/selectors';\nimport {getAdmin, toggleAuth} from './redux/admins-reducer';\n\n/* Bootstrap */\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/* Components */\n\nimport TaskContainer from './components/Tasks/TaskContainer';\n\n\n\n/* Styles */\nimport './sass/main.sass';\n\nconst App = ({isLoggined = false, getAdmin, toggleAuth, ...props}) => {\n  let history = useHistory();\n  const [cookies, setCookie, removeCookie] = useCookies(['isLoggined']);\n\n    let [status, setStatus] = useState();\n\n    const logIn = (data) => {\n        let resp = getAdmin(data)\n        setStatus(resp !== true ? false : true);\n    }\n\n    const logOut = () => {\n        removeCookie(\"isLoggined\", { path: '*', sameSite: true });\n        toggleAuth(false);\n        window.localStorage.setItem('loggined', '0');\n    }\n\n    useEffect(()=>{\n      if(isLoggined){\n          history.push(\"/tasks\")\n      }\n    },[isLoggined, history])\n\n    useEffect(()=>{\n        if(isLoggined){\n            setStatus(true)\n            setCookie('isLoggined', \"1\", { path: '*', sameSite: true });\n            window.localStorage.setItem('loggined', '1');\n        }\n        else if (cookies.isLoggined && cookies.isLoggined === \"1\") {\n            setStatus(true)\n            toggleAuth(true);\n            window.localStorage.setItem('loggined', '1');\n        }\n        else if (window.localStorage.getItem(\"loggined\") === \"1\") {\n            setStatus(true);\n            toggleAuth(true);\n            setCookie('isLoggined', \"1\", { path: '*', sameSite: true });\n        }\n    }, [isLoggined, cookies.isLoggined, cookies, setStatus, toggleAuth, setCookie])\n\n\n  return (\n    <div className=\"page-wrap\">\n      <Container className=\"main\">\n        <Row>\n          <Switch>\n            <Route path=\"/tasks\">\n              <TaskContainer logOut={logOut} logIn={logIn} isLoggined={isLoggined}/>\n            </Route>\n            <Route exact path=\"/\">\n              <TaskContainer logOut={logOut} logIn={logIn} isLoggined={isLoggined}/>\n            </Route>\n            <Route exact path=\"/admin\">\n              <Col sm={12}>{status === false ? <Alert variant=\"danger\">Неверная пара логин/пароль</Alert> : \"\"}<AdminLogin onSubmit={logIn}/></Col>\n            </Route>\n          </Switch>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n      admin: adminData.getAdmin(state),\n      isLoggined: adminData.isInited(state),\n  }\n}\n\nexport default compose( connect(mapStateToProps, {getAdmin, toggleAuth})) (App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport store from './redux/store';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport { CookiesProvider } from 'react-cookie';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <BrowserRouter>\n      <Provider store={store}>\n        <CookiesProvider>\n          <App />\n        </CookiesProvider>\n      </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}